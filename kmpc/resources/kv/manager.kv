#:kivy 1.10.0
#:import ManagerLibraryTabbedPanelItem kmpc.managerlibrarypanel.ManagerLibraryTabbedPanelItem
#:import ManagerLibraryRow kmpc.managerlibrarypanel.ManagerLibraryRow
#:import ManagerGeneratePopup kmpc.managerlibrarypanel.ManagerGeneratePopup
#:import LibraryRecycleBoxLayout kmpc.librarypanel.LibraryRecycleBoxLayout
#:import normalfont kmpc.widgets.normalfont
#:import fontawesomefont kmpc.widgets.fontawesomefont
#:import listbackdrop kmpc.widgets.listbackdrop
#:import ratingstars kmpc.widgets.ratingstars
#:import OutlineLabel kmpc.widgets.OutlineLabel
#:import OutlineButton kmpc.widgets.OutlineButton

<SmallButton@OutlineButton>:
    font_size: '16sp'
    size_hint_min_y: '48sp'
    size_hint_y: None

<StarLabel@OutlineLabel>:
    font_name: fontawesomefont
    markup: True

<ManagerGeneratePopup>:
    title: 'Generate Playlists'
    size_hint_x: 0.8
    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            orientation: 'horizontal'
            OutlineLabel:
                text: 'Rating'
            Spinner:
                id: ratings_spinner
                text_autoupdate: True
                values: ['None','0','1','2','3','4','5','6','7','8','9','10']
                on_text: root.library_tab.update_generate_text(root)
        OutlineButton:
            text: 'Generate Synclist'
            on_press: root.library_tab.generate_list('synclist',root.ids.ratings_spinner.text)
        BoxLayout:
            orientation: 'horizontal'
            OutlineLabel:
                text: 'Operation'
            Spinner:
                id: operation_spinner
                text_autoupdate: True
                values: ['<','<=','=','>=','>']
                on_text: root.library_tab.update_generate_text(root)
        BoxLayout:
            orientation: 'horizontal'
            OutlineLabel:
                text: 'Playlist Name'
            TextInput:
                id: playlist_name
                text: 'No Stars'
        OutlineButton:
            text: 'Generate Playlist'
            on_press: root.library_tab.generate_list('playlist',root.ids.ratings_spinner.text,root.ids.operation_spinner.text,root.ids.playlist_name.text)

<ArtistRow>:
    canvas.before:
        Color:
            rgba: (1,1,0,0.5) if self.selected else (0,0,0,0)
        Rectangle:
            size: self.size
            pos: self.pos
        Color:
            rgba: (1,1,1,0.3)
        Rectangle:
            size: (self.width,sp(1))
            pos: self.pos
        Rectangle:
            size: (self.width,sp(1))
            pos: (self.x,self.top)
    artist_id: ''
    artist_name: ''
    has_artistbackground: False
    has_logo: False
    has_badge: False
    BoxLayout:
        orientation: 'horizontal'
        UneditTextInput:
            multiline: False
            halign: 'left'
            valign: 'center'
            text_size: self.size
            text: root.artist_name
            padding_x: sp(10)
            background_color: (1,1,0,1) if root.selected else (1,1,1,1)
        UneditTextInput:
            multiline: False
            halign: 'left'
            valign: 'center'
            text_size: self.size
            text: root.artist_id
            padding_x: sp(10)
            background_color: (1,1,0,1) if root.selected else (1,1,1,1)
        OutlineLabel:
            size_hint_x: 0.08
            halign: 'left'
            valign: 'center'
            text_size: self.size
            text: 'Y' if root.has_artistbackground else 'N'
            padding_x: sp(10)
        OutlineLabel:
            size_hint_x: 0.08
            halign: 'left'
            valign: 'center'
            text_size: self.size
            text: 'Y' if root.has_logo else 'N'
            padding_x: sp(10)
        OutlineLabel:
            size_hint_x: 0.08
            halign: 'left'
            valign: 'center'
            text_size: self.size
            text: 'Y' if root.has_badge else 'N'
            padding_x: sp(10)

<ManagerLibraryRow>:
    canvas.before:
        Color:
            rgba: app.get_color('listitemselected') if self.selected else app.get_color('listitem')
        Rectangle:
            source: listbackdrop
            size: self.size
            pos: self.pos
        Color:
            rgba: (1,1,1,0.3)
        Rectangle:
            size: (self.width,sp(1))
            pos: self.pos
        Rectangle:
            size: (self.width,sp(1))
            pos: (self.x,self.top)
    value: ''
    base: 'root'
    level: 'root'
    upto: None
    info: {}
    copy_flag: ''
    rating: ''
    BoxLayout:
        orientation: 'horizontal'
        size_hint_x: 0.15
        spacing: '10sp'
        StarLabel:
            size_hint_x: None
            text: '[ref=rating]'+ratingstars[int(root.rating)]+'[/ref]' if root.rating else '[ref=rating]'+ratingstars[11]+'[/ref]'
            on_ref_press: root.rating_popup(root)
        OutlineLabel:
            size_hint_x: None
            text: root.copy_flag

<ManagerLibraryTabbedPanelItem>:
    text: 'Library'
    rv: rv
    rbl: rbl
    current_header: current_header
    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            size_hint_y: None
            size_hint_min_y: '48sp'
            orientation: 'horizontal'
            OutlineToggleButton:
                group: 'librarytype'
                text: 'Files'
                id: files_button
                on_press: root.change_view_type(self.text)
            OutlineToggleButton:
                group: 'librarytype'
                text: 'Albums'
                id: albums_button
                on_press: root.change_view_type(self.text)
            OutlineToggleButton:
                group: 'librarytype'
                text: 'Tracks'
                id: tracks_button
                on_press: root.change_view_type(self.text)
            OutlineButton:
                text: 'Generate'
                id: generate_button
                on_press: root.popup_generate()
        OutlineLabel:
            id: current_header
            size_hint_y: None
            size_hint_min_y: '24sp'
            padding_x: sp(10)
            text: ''
            text_size: self.size
            halign: 'center'
            valign: 'middle'
        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: 0.6
            RecycleView:
                id: rv
                rv_selection: {}
                scroll_type: ['bars','content']
                bar_width: sp(40)
                do_scroll_x: False
                viewclass: 'ManagerLibraryRow'
                LibraryRecycleBoxLayout:
                    id: rbl
                    default_size_hint: 1, None
                    size_hint_y: None
                    size_hint_min_y: '48sp'
                    height: self.minimum_height
                    orientation: 'vertical'
                    spacing: sp(2)
                    multiselect: True
                    touch_multiselect: True
            BoxLayout:
                orientation: 'vertical'
                size_hint_x: '0.05'
                OutlineButton:
                    text: '+'
                    on_press: root.set_copy_flag('Y')
                OutlineButton:
                    text: '-'
                    on_press: root.set_copy_flag('N')
                OutlineButton:
                    text: '/'
                    on_press: root.set_copy_flag('')

<ManagerInterface>:
    do_default_tab: False
    active_tab: None
    background_color: app.get_color('backdrop')
    background_image: backdrop
    TabbedPanelItem:
        text: 'Artists'
        id: artist_tab
        rv: rv
        rbl: rbl
        BoxLayout:
            orientation: 'vertical'
            BoxLayout:
                canvas.before:
                    Color:
                        rgba: (.25,.25,.25,1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                size_hint_min_y: '24sp'
                size_hint_y: None
                OutlineLabel:
                    halign: 'center'
                    valign: 'middle'
                    size_hint_y: None
                    id: status
                    text: ''
            BoxLayout:
                orientation: 'horizontal'
                size_hint_y: None
                size_hint_min_y: '48sp'
                SmallButton:
                    text: 'Refresh from mpd and internet'
                    on_press: root.refresh_artists()
                SmallButton:
                    text: 'Refresh from cache'
                    on_press: root.refresh_artists_from_cache()
                SmallButton:
                    text: 'Write to cache'
                    on_press: root.write_artists_to_cache()
            BoxLayout:
                orientation: 'horizontal'
                size_hint_y: None
                size_hint_min_y: '48sp'
                SmallButton:
                    text: 'Scan row'
                    on_press: root.scan_row_for_media()
                SmallButton:
                    text: 'Scan all'
                    on_press: root.scan_all_for_media()
                SmallButton:
                    text: 'Pull art for row'
                    on_press: root.pull_art_for_row()
                SmallButton:
                    text: 'Pull art for all'
                    on_press: root.pull_art_for_all()
            RecycleView:
                id: rv
                rv_selection: {}
                do_scroll_x: False
                scroll_type: ['bars','content']
                bar_width: sp(40)
                viewclass: 'ArtistRow'
                ArtistRecycleBoxLayout:
                    id: rbl
                    default_size: None, sp(24)
                    default_size_hint: 1, None
                    size_hint_y: None
                    height: self.minimum_height
                    orientation: 'vertical'
                    spacing: sp(2)
                    multiselect: False
                    touch_multiselect: False
    ManagerLibraryTabbedPanelItem:
        id: library_tab
    TabbedPanelItem:
        text: 'System'
        BoxLayout:
            orientation: 'vertical'
            Button:
                text: 'Config'
                on_press: app.open_settings()
            Button:
                text: 'Exit'
                on_press: app.stop()

